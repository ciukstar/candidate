
Array.from(
  document.querySelectorAll('button.accordion-button[data-tab-index]')
).forEach(x => {
  x.addEventListener('click', function (e) {
    const params = new URL(window.location).searchParams;
    params.set('tab', x.dataset.tabIndex);
    history.replaceState(null,"",`${window.location.pathname}?${params}`);
  });
});

document.querySelectorAll(
  'div.is-invalid > input'
).forEach(function (x) { x.classList.add('is-invalid'); });

document.querySelectorAll(
  'div.is-valid > input'
).forEach(function (x) { x.classList.add('is-valid'); });

[ ['modalSkills','modalInputSearchSkills']
].map(
  ([dialog,input]) => [document.getElementById(dialog),document.getElementById(input)]
).forEach(([dialog,input]) => {
  input.addEventListener('input', e => {
    var skey = e.target.value.toLowerCase();
    var items = Array.from(dialog.querySelectorAll('.modal-body ul > li'));
    items.forEach(x => { x.setAttribute('hidden',''); });
    items.filter(
      (x) => x.querySelector('label').textCotent.toLowerCase().indexOf(skey) >= 0
    ).forEach(x => { x.removeAttribute('hidden'); });
  });
});

Array.from(
  document.body.querySelectorAll('button.delete')
).forEach(x => {
  x.addEventListener('click',function (e) {
    fetch(e.target.dataset.url, {
      method: 'DELETE'
    }).then((result) => {
      window.location = '@?{(ApplicantEditFormR aid,[("tab","1")])}';
    });
  });
});

function displayPhoto(input) {
  if (input.files && input.files[0]) {
    var reader = new FileReader();
    reader.onload = function (e) {
      $('#imgPhoto').attr('src',e.target.result).show();
    };
    reader.readAsDataURL(input.files[0]);
  }
}
