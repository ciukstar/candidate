
<nav aria-label=breadcrumb>
  <ol.breadcrumb>
    <li.breadcrumb-item>
      <a href=@{HomeR} rel=linkset>_{MsgHome}
    <li.breadcrumb-item>
      <a href=@?{(JobsR,stati)} rel=collection>_{MsgPositions}
    <li.breadcrumb-item.active aria-current=page>_{MsgSkills}

$maybe Job _ name _ _ _ _ <- job
  <h1>
    <a.btn.btn-light.border-0.rounded-circle href=@?{(JobsR,stati)} rel=collection role=button aria-label=_{MsgBack}>
      <i.bi.bi-chevron-left>
    #{name}

<fieldset.border.rounded.p-3>
  <legend.display-6>_{MsgSkills}

  $forall (status,msg) <- filter (not . (isInfixOf "toast" . fst)) msgs
    <div.alert.#{status}.alert-dismissible.fade.show>
      $if "alert-warning" == status
        <i.bi.bi-exclamation-triangle.me-2>
        #{msg}
        <button.btn-close data-bs-dismiss=alert aria-label=_{MsgClose}>
      $else
        <i.bi.bi-info-circle.me-2>
        #{msg}
        <a.btn-close href=@?{(JobSkillsEditFormR jid,stati)} aria-label=_{MsgClose}>

  <form method=get action=@{JobSkillsEditFormR jid} enctype=#{fe} #formGetJobSkillWeights>
    $forall (x,v) <- filter ((.) ((/=) "jsid") fst) stati
      <input type=hidden name=#{x} value=#{v}>

  <form method=post action=@?{(JobSkillsEditR jid,stati)} enctype=#{fe} #formPostJobSkillWeights>
    <input type=submit hidden>
    <input type=url name=location value=@?{(JobSkillsEditFormR jid,stati)} hidden>
    ^{fw}

  <div.text-end.mt-3>
    <a.btn.btn-light.mt-3 href=@?{(JobsR,stati)} role=button>
      _{MsgCancel}
    <button.btn.btn-success.mt-3 type=button data-bs-toggle=modal data-bs-target=#modalSkills>
      _{MsgAdd}
    <button.btn.btn-primary.mt-3 type=submit form=formPostJobSkillWeights>
      _{MsgSave}


<div.modal.fade #modalSkills tabindex=-1 aria-hidden=true aria-label=_{MsgSkills}>
  <div.modal-dialog.modal-dialog-scrollable>
    <div.modal-content>
      <div.modal-header.border-bottom-0>
        <h4.modal-title>_{MsgSkills}
        <button.btn-close type=button data-bs-dismiss=modal aria-label=_{MsgClose}>
      <div.modal-header.border-top-0.mt-0.pt-0>
        <div.input-group>
          <i.bi.bi-search.input-group-text>
          <input.form-control type=search placeholder=_{MsgSearch} #inputSearchSkills>
      <div.modal-body>
        <form #formSkills method=post action=@?{(JobSkillsR jid,stati)}>
          <input type=url name=location value=@?{(JobSkillsEditFormR jid,stati)} required hidden>
          <input type=number name=weight value=0 required hidden>
          <ul.list-group.list-group-flush>
            $forall Entity id (Skill code name _ _) <- skillPool
              <li.list-group-item.list-group-item-action.text-nowrap>
                <input.form-check-input.me-2 type=radio name=skill value=#{fromSqlKey id}
                   #inputSkill#{fromSqlKey id} required>
                <label.form-check-label.text-wrap.lh-1 for=inputSkill#{fromSqlKey id} title=#{code}>
                  #{name}
      <div.modal-footer>
        <button.btn.btn-light type=button data-bs-dismiss=modal>
          _{MsgCancel}
        <button.btn.btn-primary type=submit form=formSkills>
          _{MsgSelect}


$forall (Entity jsid (JobSkill _ _ _ _ _), Entity _ (Skill code _ _ _)) <- skills
  <div.modal.fade.skillOptions #modalChildSkills#{fromSqlKey jsid} tabindex=-1 aria-hidden=true aria-label=_{MsgSkills}>
    <div.modal-dialog.modal-dialog-scrollable>
      <div.modal-content>
        <div.modal-header.border-bottom-0>
          <h4.modal-title>_{MsgSkills}
          <button.btn-close type=button data-bs-dismiss=modal aria-label=_{MsgClose}>
        <div.modal-header.border-top-0.mt-0.pt-0>
          <div.input-group>
            <i.bi.bi-search.input-group-text>
            <input.form-control type=search placeholder=_{MsgSearch} #inputSearchSkills#{fromSqlKey jsid}>
        <div.modal-body>
          <form #formChildSkills#{fromSqlKey jsid} method=post action=@{JobSkillsR jid}>
            <input type=url name=location value=#{location} required hidden>
            <input type=number name=weight value=0 required hidden>
            <input type=number name=parent value=#{fromSqlKey jsid} required hidden>
            <ul.list-group.list-group-flush>
              $forall Entity sid (Skill code name _ _) <- skillPool
                <li.list-group-item.text-nowrap>
                  <input.form-check-input.me-2 type=radio name=skill value=#{fromSqlKey sid}
                    #inputRadio#{fromSqlKey jsid}#{fromSqlKey sid} required>
                  <label.form-check-label.text-wrap.lh-1 for=inputRadio#{fromSqlKey jsid}#{fromSqlKey sid} title=#{code}>
                    #{name}
        <div.modal-footer>
          <button.btn.btn-light type=button data-bs-dismiss=modal>
            _{MsgCancel}
          <button.btn.btn-primary type=submit form=formChildSkills#{fromSqlKey jsid}>
            _{MsgSelect}

  <div.modal.fade #modalChildSkillsRemove#{fromSqlKey jsid} tabindex=-1
    aria-labelledby=modalChildSkillsRemoveTitle#{fromSqlKey jsid}>
    <div.modal-dialog>
      <div.modal-content>
        <div.modal-header>
          <h5.modal-title #modalChildSkillsRemoveTitle#{fromSqlKey jsid}>
            _{MsgPleaseConfirm}
          <button.btn-close type=button data-bs-dismiss=modal aria-label=_{MsgClose}>
        <div.modal-body>
          <code>_{MsgInQuotes code}
          <h4>_{MsgReallyRemove}
        <div.modal-footer>
          <button.btn.btn-light type=button data-bs-dismiss=modal>
            _{MsgCancel}
          <button.btn.btn-warning.remove type=button data-url=@?{(JobSkillR jid jsid,stati)}>
            _{MsgRemove}

$forall (status,msg) <- filter (isInfixOf "toast" . fst) msgs
  <div.toast-container.p-3.bottom-0.start-50.translate-middle-x>
    <div.toast.align-items-center.text-bg-secondary.border-0.fade.show role=alert aria-live=assertive aria-atomic=true>
      <div.d-flex>
        <div.toast-body>
          $if isInfixOf "alert-info" status
            <i.bi.bi-info-circle.me-2>
          #{msg}
        <button.btn-close.btn-close-white.me-2.m-auto type=button data-bs-dismiss=toast aria-label=_{MsgClose}>
  <script>
    setTimeout(function () {
      Array.from(document.getElementsByClassName('toast')).forEach(function (x) {
        x.classList.remove('show')
      })
    },5000)
